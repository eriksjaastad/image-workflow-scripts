[tool.ruff]
target-version = "py311"
src = ["scripts"]
extend-exclude = [
  "*.md", "*.txt", "*.json", "*.csv", "*.html", "*.css", "*.js",
  "scripts/archive/*",
]

[tool.ruff.lint]
# Add BLE (broad-except) and T201 (print) to your existing rules
select = ["E","F","I","B","BLE","T20"]
ignore = [
  "E501",  # long lines ok
  "E402",  # imports not at top ok
  "BLE001",  # Temporarily disabled - Raptor review will fix broad exception handlers properly
  "T201",  # Temporarily disabled - too many prints, Raptor will review which should be logging
  "F821",  # Undefined names (conditional imports) - Raptor will review
  "F401",  # Unused imports (test helpers) - Raptor will clean up
  "B005",  # lstrip with multi-char strings - Raptor will use removeprefix()
  "B007",  # Unused loop vars - Raptor will fix with _ prefix convention
  "B904",  # raise ... from err - exception chaining (Raptor will review)
  "B905",  # zip() without strict= parameter (Raptor will add where needed)
  "B006",  # Mutable default arguments - Raptor will fix
  "B023",  # Loop variable binding issues - Raptor will review
  "B011",  # assert False -> raise AssertionError() - Raptor will fix
  "B025",  # Duplicate exception handlers - Raptor will consolidate
]

[tool.ruff.lint.per-file-ignores]
# Allow prints in true CLIs & tests
"scripts/**/tests/**" = ["T201"]
"scripts/dashboard/**" = ["T201"]
"scripts/utils/**" = ["T201"]  # Utility modules often have debug prints
"scripts/**/run_*.py" = ["T201"]
"scripts/**/test_*.py" = ["T201"]
"scripts/[0-9][0-9]_*.py" = ["T201"]  # Numbered workflow scripts (00_start_project, etc.)
